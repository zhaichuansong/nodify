<UserControl
    x:Class="Nodify.Calculator.EditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Nodify.Calculator"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:nodify="https://miroiu.github.io/nodify"
    xmlns:shared="clr-namespace:Nodify;assembly=Nodify.Shared"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    d:DataContext="{d:DesignInstance Type=local:EditorViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <GeometryDrawing
            x:Key="SmallGridGeometry"
            Brush="{DynamicResource GridLinesBrush}"
            Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z" />

        <GeometryDrawing
            x:Key="LargeGridGeometry"
            Brush="{DynamicResource GridLinesBrush}"
            Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z" />

        <DrawingBrush
            x:Key="SmallGridLinesDrawingBrush"
            Drawing="{StaticResource SmallGridGeometry}"
            TileMode="Tile"
            Transform="{Binding ViewportTransform, ElementName=Editor}"
            Viewport="0 0 15 15"
            ViewportUnits="Absolute" />

        <DrawingBrush
            x:Key="LargeGridLinesDrawingBrush"
            Drawing="{StaticResource LargeGridGeometry}"
            Opacity="0.5"
            TileMode="Tile"
            Transform="{Binding ViewportTransform, ElementName=Editor}"
            Viewport="0 0 150 150"
            ViewportUnits="Absolute" />

        <LinearGradientBrush x:Key="AnimatedBrush" StartPoint="0 0" EndPoint="1 0">
            <GradientStop Offset="0" Color="#6366f1" />
            <GradientStop Offset="0.5" Color="#a855f7" />
            <GradientStop Offset="1" Color="#ec4899" />
        </LinearGradientBrush>
        <Border x:Key="AnimatedBorderPlaceholder" BorderBrush="{StaticResource AnimatedBrush}" />

        <Storyboard x:Key="AnimateBorder" RepeatBehavior="Forever">
            <PointAnimation
                Storyboard.Target="{StaticResource AnimatedBorderPlaceholder}"
                Storyboard.TargetProperty="BorderBrush.(LinearGradientBrush.StartPoint)"
                To="1 0"
                Duration="0:0:2" />
            <PointAnimation
                BeginTime="0:0:2"
                Storyboard.Target="{StaticResource AnimatedBorderPlaceholder}"
                Storyboard.TargetProperty="BorderBrush.(LinearGradientBrush.StartPoint)"
                To="1 1"
                Duration="0:0:2" />
            <PointAnimation
                BeginTime="0:0:4"
                Storyboard.Target="{StaticResource AnimatedBorderPlaceholder}"
                Storyboard.TargetProperty="BorderBrush.(LinearGradientBrush.StartPoint)"
                To="0 1"
                Duration="0:0:2" />
            <PointAnimation
                BeginTime="0:0:6"
                Storyboard.Target="{StaticResource AnimatedBorderPlaceholder}"
                Storyboard.TargetProperty="BorderBrush.(LinearGradientBrush.StartPoint)"
                To="0 0"
                Duration="0:0:2" />
            <PointAnimation
                Storyboard.Target="{StaticResource AnimatedBorderPlaceholder}"
                Storyboard.TargetProperty="BorderBrush.(LinearGradientBrush.EndPoint)"
                To="1 1"
                Duration="0:0:2" />
            <PointAnimation
                BeginTime="0:0:2"
                Storyboard.Target="{StaticResource AnimatedBorderPlaceholder}"
                Storyboard.TargetProperty="BorderBrush.(LinearGradientBrush.EndPoint)"
                To="0 1"
                Duration="0:0:2" />
            <PointAnimation
                BeginTime="0:0:4"
                Storyboard.Target="{StaticResource AnimatedBorderPlaceholder}"
                Storyboard.TargetProperty="BorderBrush.(LinearGradientBrush.EndPoint)"
                To="0 0"
                Duration="0:0:2" />
            <PointAnimation
                BeginTime="0:0:6"
                Storyboard.Target="{StaticResource AnimatedBorderPlaceholder}"
                Storyboard.TargetProperty="BorderBrush.(LinearGradientBrush.EndPoint)"
                To="1 0"
                Duration="0:0:2" />
        </Storyboard>

        <local:ItemToListConverter x:Key="ItemToListConverter" />

        <DataTemplate x:Key="ConnectionTemplate" DataType="{x:Type local:ConnectionViewModel}">
            <nodify:CircuitConnection Source="{Binding Output.Anchor}" Target="{Binding Input.Anchor}" />
        </DataTemplate>

        <DataTemplate x:Key="PendingConnectionTemplate" DataType="{x:Type local:PendingConnectionViewModel}">
            <nodify:PendingConnection
                CompletedCommand="{Binding DataContext.CreateConnectionCommand, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}"
                IsVisible="{Binding IsVisible}"
                Source="{Binding Source, Mode=OneWayToSource}"
                StartedCommand="{Binding DataContext.StartConnectionCommand, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}"
                Target="{Binding Target, Mode=OneWayToSource}"
                TargetAnchor="{Binding TargetLocation, Mode=OneWayToSource}" />
        </DataTemplate>

        <Style
            x:Key="ItemContainerStyle"
            BasedOn="{StaticResource {x:Type nodify:ItemContainer}}"
            TargetType="{x:Type nodify:ItemContainer}">
            <Setter Property="Location" Value="{Binding Location}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
            <Setter Property="ActualSize" Value="{Binding Size, Mode=OneWayToSource}" />
            <Setter Property="BorderBrush" Value="{Binding BorderBrush, Source={StaticResource AnimatedBorderPlaceholder}}" />
            <Setter Property="BorderThickness" Value="2" />
        </Style>
    </UserControl.Resources>

    <Grid>
        <nodify:NodifyEditor
            x:Name="Editor"
            AllowDrop="True"
            Background="{StaticResource SmallGridLinesDrawingBrush}"
            ConnectionTemplate="{StaticResource ConnectionTemplate}"
            Connections="{Binding Connections}"
            DataContext="{Binding Calculator}"
            DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
            Drop="OnDropNode"
            GridCellSize="15"
            HasCustomContextMenu="True"
            ItemContainerStyle="{StaticResource ItemContainerStyle}"
            ItemsSource="{Binding Operations}"
            PendingConnection="{Binding PendingConnection}"
            PendingConnectionTemplate="{StaticResource PendingConnectionTemplate}"
            SelectedItems="{Binding SelectedOperations}">
            <nodify:NodifyEditor.Resources>
                <Style BasedOn="{StaticResource {x:Type nodify:NodeInput}}" TargetType="{x:Type nodify:NodeInput}">
                    <Setter Property="Header" Value="{Binding}" />
                    <Setter Property="IsConnected" Value="{Binding IsConnected}" />
                    <Setter Property="Anchor" Value="{Binding Anchor, Mode=OneWayToSource}" />
                    <Setter Property="ToolTip" Value="{Binding Value}" />
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="0,0,5,0" Text="{Binding Title}" />
                                    <TextBox Text="{Binding Value}" Visibility="{Binding IsConnected, Converter={shared:BooleanToVisibilityConverter Negate=True}}" />
                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style BasedOn="{StaticResource {x:Type nodify:NodeOutput}}" TargetType="{x:Type nodify:NodeOutput}">
                    <Setter Property="Header" Value="{Binding}" />
                    <Setter Property="IsConnected" Value="{Binding IsConnected}" />
                    <Setter Property="Anchor" Value="{Binding Anchor, Mode=OneWayToSource}" />
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                <TextBox IsEnabled="False" Text="{Binding Value}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <DataTemplate DataType="{x:Type local:OperationGraphViewModel}">
                    <nodify:GroupingNode
                        ActualSize="{Binding DesiredSize, Mode=TwoWay}"
                        CanResize="{Binding IsExpanded}"
                        Header="{Binding}"
                        MovementMode="Self">
                        <nodify:GroupingNode.HeaderTemplate>
                            <DataTemplate DataType="{x:Type local:OperationGraphViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="{Binding Title}" />
                                    <StackPanel
                                        Grid.Column="1"
                                        Margin="5,0,0,0"
                                        Orientation="Horizontal">
                                        <TextBlock
                                            Margin="0,0,5,0"
                                            Text="Expand?"
                                            Visibility="{Binding IsExpanded, Converter={shared:BooleanToVisibilityConverter}}" />
                                        <CheckBox IsChecked="{Binding IsExpanded}" />
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </nodify:GroupingNode.HeaderTemplate>
                        <Grid>
                            <ScrollViewer CanContentScroll="True" Visibility="{Binding IsExpanded, Converter={shared:BooleanToVisibilityConverter}}">
                                <nodify:NodifyEditor
                                    AllowDrop="True"
                                    Background="Transparent"
                                    ConnectionTemplate="{StaticResource ConnectionTemplate}"
                                    Connections="{Binding Connections}"
                                    DataContext="{Binding InnerCalculator}"
                                    DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
                                    Drop="OnDropNode"
                                    GridCellSize="15"
                                    HasCustomContextMenu="True"
                                    ItemContainerStyle="{StaticResource ItemContainerStyle}"
                                    ItemsSource="{Binding Operations}"
                                    PendingConnection="{Binding PendingConnection}"
                                    PendingConnectionTemplate="{StaticResource PendingConnectionTemplate}"
                                    SelectedItems="{Binding SelectedOperations}"
                                    Tag="{Binding DataContext, RelativeSource={RelativeSource Self}}"
                                    Visibility="{Binding DataContext.IsExpanded, RelativeSource={RelativeSource AncestorType=nodify:GroupingNode}, Converter={shared:BooleanToVisibilityConverter}}">

                                    <nodify:NodifyEditor.InputBindings>
                                        <KeyBinding Key="Delete" Command="{Binding DeleteSelectionCommand}" />
                                        <KeyBinding Key="C" Command="{Binding GroupSelectionCommand}" />
                                    </nodify:NodifyEditor.InputBindings>

                                    <CompositeCollection>
                                        <nodify:DecoratorContainer DataContext="{Binding OperationsMenu}" Location="{Binding Location}">
                                            <local:OperationsMenuView />
                                        </nodify:DecoratorContainer>
                                    </CompositeCollection>
                                </nodify:NodifyEditor>
                            </ScrollViewer>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ItemsControl ItemsSource="{Binding Input}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <nodify:NodeInput />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <nodify:NodeOutput
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    DataContext="{Binding Output}" />
                            </Grid>
                        </Grid>
                    </nodify:GroupingNode>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:ExpandoOperationViewModel}">
                    <nodify:Node
                        Content="{Binding}"
                        Header="{Binding Title}"
                        Input="{Binding Input}"
                        Output="{Binding Output, Converter={StaticResource ItemToListConverter}}">
                        <nodify:Node.ContentTemplate>
                            <DataTemplate DataType="{x:Type local:ExpandoOperationViewModel}">
                                <StackPanel>
                                    <Button
                                        Command="{Binding AddInputCommand}"
                                        Content="{StaticResource PlusIcon}"
                                        Style="{StaticResource IconButton}" />
                                    <Button
                                        Command="{Binding RemoveInputCommand}"
                                        Content="{StaticResource RemoveKeyIcon}"
                                        Style="{StaticResource IconButton}" />
                                </StackPanel>
                            </DataTemplate>
                        </nodify:Node.ContentTemplate>
                    </nodify:Node>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:ExpressionOperationViewModel}">
                    <nodify:Node
                        Content="{Binding}"
                        Input="{Binding Input}"
                        Output="{Binding Output, Converter={StaticResource ItemToListConverter}}">
                        <nodify:Node.ContentTemplate>
                            <DataTemplate DataType="{x:Type local:ExpressionOperationViewModel}">
                                <TextBox
                                    MinWidth="100"
                                    Margin="5,0,0,0"
                                    Text="{Binding Expression}" />
                            </DataTemplate>
                        </nodify:Node.ContentTemplate>
                    </nodify:Node>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:CalculatorOperationViewModel}">
                    <nodify:Node
                        Header="{Binding Title}"
                        Input="{Binding Input}"
                        Output="{Binding Output, Converter={StaticResource ItemToListConverter}}"
                        ToolTip="Double click to expand">
                        <nodify:Node.InputBindings>
                            <MouseBinding
                                Command="{Binding DataContext.OpenCalculatorCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                CommandParameter="{Binding InnerCalculator}"
                                Gesture="LeftDoubleClick" />
                        </nodify:Node.InputBindings>
                    </nodify:Node>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:CalculatorInputOperationViewModel}">
                    <DataTemplate.Resources>
                        <Style BasedOn="{StaticResource {x:Type nodify:NodeOutput}}" TargetType="{x:Type nodify:NodeOutput}">
                            <Setter Property="Header" Value="{Binding}" />
                            <Setter Property="IsConnected" Value="{Binding IsConnected}" />
                            <Setter Property="Anchor" Value="{Binding Anchor, Mode=OneWayToSource}" />
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBox IsEnabled="False" Text="{Binding Value}" />
                                            <TextBlock Margin="5,0,0,0" Text="{Binding Title}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataTemplate.Resources>
                    <nodify:Node Header="{Binding Title}" Output="{Binding Output}">
                        <StackPanel>
                            <Button
                                Command="{Binding AddOutputCommand}"
                                Content="{StaticResource PlusIcon}"
                                Style="{StaticResource IconButton}" />
                            <Button
                                Command="{Binding RemoveOutputCommand}"
                                Content="{StaticResource RemoveKeyIcon}"
                                Style="{StaticResource IconButton}" />
                        </StackPanel>
                    </nodify:Node>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:OperationGroupViewModel}">
                    <nodify:GroupingNode ActualSize="{Binding GroupSize, Mode=TwoWay}" Header="{Binding Title}" />
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:OperationViewModel}">
                    <nodify:Node
                        Content="{Binding Title}"
                        Input="{Binding Input}"
                        Output="{Binding Output, Converter={StaticResource ItemToListConverter}}" />
                </DataTemplate>
            </nodify:NodifyEditor.Resources>

            <nodify:NodifyEditor.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding DeleteSelectionCommand}" />
                <KeyBinding Key="C" Command="{Binding GroupSelectionCommand}" />
            </nodify:NodifyEditor.InputBindings>

            <nodify:NodifyEditor.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard Name="AnimateBorder" Storyboard="{StaticResource AnimateBorder}" />
                </EventTrigger>
            </nodify:NodifyEditor.Triggers>

            <CompositeCollection>
                <nodify:DecoratorContainer DataContext="{Binding OperationsMenu}" Location="{Binding Location}">
                    <local:OperationsMenuView />
                </nodify:DecoratorContainer>
            </CompositeCollection>
        </nodify:NodifyEditor>

        <Grid Panel.ZIndex="-2" Background="{StaticResource LargeGridLinesDrawingBrush}" />

        <Border
            MinWidth="200"
            MaxWidth="300"
            Margin="10"
            Padding="7"
            HorizontalAlignment="Right"
            BorderThickness="2"
            CornerRadius="3">
            <Border.Background>
                <SolidColorBrush Opacity="0.7" Color="{DynamicResource BackgroundColor}" />
            </Border.Background>
            <ScrollViewer>
                <ItemsControl ItemsSource="{Binding Calculator.OperationsMenu.AvailableOperations}">
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="FrameworkElement.Margin" Value="5" />
                            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left" />
                            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
                            <Setter Property="FrameworkElement.ToolTip" Value="Drag and drop into the editor" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:OperationViewModel}">
                            <nodify:Node
                                BorderBrush="{StaticResource AnimatedBrush}"
                                BorderThickness="2"
                                Content="{Binding Title}"
                                Input="{Binding Input}"
                                MouseMove="OnNodeDrag">
                                <nodify:Node.Output>
                                    <CompositeCollection>
                                        <sys:String>Output</sys:String>
                                    </CompositeCollection>
                                </nodify:Node.Output>
                            </nodify:Node>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Border>
    </Grid>
</UserControl>
